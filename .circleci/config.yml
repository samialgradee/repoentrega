version: 2.1

orbs:
  aws-cli: circleci/aws-cli@3.0.0
  serverless: circleci/serverless-framework@1.0.1

parameters:
  prospect:
    type: string
    default: "isabel2"
  project:
      type: string
      default: "repoentrega"
  api:
      type: string
      default: "entrega"
  region:
      type: string
      default: "us-east-1"
  instance_id:
      type: string
      default: "i-0652bd076d39ba103"

jobs:
  # build:
  #   working_directory: /tmp/project
  #   docker:
  #     - image: circleci/node:16
  #   steps:
  #     - attach_workspace:
  #         at: /tmp/project
  #     - checkout
  #     - run:
  #         name: Install dependencies
  #         command: npm install
  #     - run:
  #         name: Build
  #         command: npm run build

  quality:
    working_directory: /tmp/project
    docker:
      - image: sonarsource/sonar-scanner-cli
    steps:
      - checkout
      - run:
          name: Code analysis
          command: sonar-scanner -Dsonar.login=$SONAR_LOGIN -Dsonar.host.url=http://sonar.empcbr.thoughtworks-labs.net

  # tests:
  #   working_directory: /tmp/project
  #   docker:
  #     - image: circleci/node:16
  #   steps:
  #     - attach_workspace:
  #         at: /tmp/project
  #     - checkout
  #     - run:
  #         name: Install dependencies
  #         command: npm ci
  #     - run:
  #         name: unitary test
  #         command: npm run test:cov
  #     - run:
  #         name: test end to end
  #         command: npm run test:e2e

  create-docker-image:
    docker:
      - image: circleci/python:3.9
    steps:
      - attach_workspace:
          at: /tmp/project
      - checkout
      - run:
          command: |
             pip3.9 install awscli
      - setup_remote_docker:
          version: 20.10.11
          docker_layer_caching: true
      - run:
          command: |
            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 626109959667.dkr.ecr.us-east-1.amazonaws.com
            SHORT_SHA1=$(echo $CIRCLE_SHA1 | cut -c -7)
            docker image build . --tag << pipeline.parameters.api >>:${SHORT_SHA1}
            docker tag << pipeline.parameters.api >>:${SHORT_SHA1} 626109959667.dkr.ecr.us-east-1.amazonaws.com/<< pipeline.parameters.api >>:${SHORT_SHA1}
            docker tag << pipeline.parameters.api >>:${SHORT_SHA1} 626109959667.dkr.ecr.us-east-1.amazonaws.com/<< pipeline.parameters.api >>:latest
            docker push 626109959667.dkr.ecr.us-east-1.amazonaws.com/<< pipeline.parameters.api >>:${SHORT_SHA1}
            docker push 626109959667.dkr.ecr.us-east-1.amazonaws.com/<< pipeline.parameters.api >>:latest
  deploy:
    working_directory: /tmp/project
    docker:
      - image: cimg/base:stable
    steps:
      - attach_workspace:
          at: /tmp/project
      - checkout
      - aws-cli/setup
      - run: 
          command: |
            SHORT_SHA1=$(echo $CIRCLE_SHA1 | cut -c -7)
            sed 's|{image-tag}|'$SHORT_SHA1'|g' k8s/deploy.yml > deploy.yml
            FILE_VALUE=$(cat deploy.yml | base64 -w 0)
            echo "{ \"Parameters\": { \"commands\": [ \"#!/bin/bash\", \"echo $FILE_VALUE | base64 -d > /tmp/file.yml\", \"runuser ubuntu -c 'kubectl apply -f /tmp/file.yml'\"]}}" > parameters.json
            aws ssm send-command --document-name "AWS-RunShellScript" --instance-ids "<< pipeline.parameters.instance_id >>" --region "<< pipeline.parameters.region>>" --cli-input-json file://parameters.json
workflows:
  deploy:
    jobs:
      # - build
      # - tests:
      #     requires:
      #       - build
      - quality:
          context:
            - Demo-DX
          # requires:
          #   - tests
      - create-docker-image:
          filters:
            branches:
              only:
                - main
          context:
            - Demo-DX
          # requires:
          #   - tests
      - deploy:
          filters:
            branches:
              only:
                - main
          context:
            - Demo-DX
          requires:
            - create-docker-image

# VS Code Extension Version: 1.4.0
